// Generated by Dagger (https://dagger.dev).
package com.ivan.todoengine.di;

import com.ivan.todoengine.networking.di.IApiFactory;
import com.ivan.todoengine.networking.oauth2.OAuth2TokenApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_Companion_ProvideAuthApiFactory implements Factory<OAuth2TokenApi> {
  private final ApiModule.Companion module;

  private final Provider<IApiFactory> apiFactoryProvider;

  public ApiModule_Companion_ProvideAuthApiFactory(ApiModule.Companion module,
      Provider<IApiFactory> apiFactoryProvider) {
    this.module = module;
    this.apiFactoryProvider = apiFactoryProvider;
  }

  @Override
  public OAuth2TokenApi get() {
    return provideAuthApi(module, apiFactoryProvider.get());
  }

  public static ApiModule_Companion_ProvideAuthApiFactory create(ApiModule.Companion module,
      Provider<IApiFactory> apiFactoryProvider) {
    return new ApiModule_Companion_ProvideAuthApiFactory(module, apiFactoryProvider);
  }

  public static OAuth2TokenApi provideAuthApi(ApiModule.Companion instance,
      IApiFactory apiFactory) {
    return Preconditions.checkNotNull(instance.provideAuthApi(apiFactory), "Cannot return null from a non-@Nullable @Provides method");
  }
}
