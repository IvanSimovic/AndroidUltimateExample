// Generated by Dagger (https://dagger.dev).
package com.ivan.todoengine.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.Interceptor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_Companion_ProvideLoggingInterceptorFactory implements Factory<Interceptor> {
  private final NetworkModule.Companion module;

  public NetworkModule_Companion_ProvideLoggingInterceptorFactory(NetworkModule.Companion module) {
    this.module = module;
  }

  @Override
  public Interceptor get() {
    return provideLoggingInterceptor(module);
  }

  public static NetworkModule_Companion_ProvideLoggingInterceptorFactory create(
      NetworkModule.Companion module) {
    return new NetworkModule_Companion_ProvideLoggingInterceptorFactory(module);
  }

  public static Interceptor provideLoggingInterceptor(NetworkModule.Companion instance) {
    return Preconditions.checkNotNull(instance.provideLoggingInterceptor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
