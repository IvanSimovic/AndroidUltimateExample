// Generated by Dagger (https://dagger.dev).
package com.ivan.todoengine.di;

import com.ivan.todoengine.data.api.ActivityApi;
import com.ivan.todoengine.networking.di.IApiFactory;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideActivityApiFactory implements Factory<ActivityApi> {
  private final Provider<IApiFactory> apiFactoryProvider;

  public ApiModule_ProvideActivityApiFactory(Provider<IApiFactory> apiFactoryProvider) {
    this.apiFactoryProvider = apiFactoryProvider;
  }

  @Override
  public ActivityApi get() {
    return provideActivityApi(apiFactoryProvider.get());
  }

  public static ApiModule_ProvideActivityApiFactory create(
      Provider<IApiFactory> apiFactoryProvider) {
    return new ApiModule_ProvideActivityApiFactory(apiFactoryProvider);
  }

  public static ActivityApi provideActivityApi(IApiFactory apiFactory) {
    return Preconditions.checkNotNull(ApiModule.provideActivityApi(apiFactory), "Cannot return null from a non-@Nullable @Provides method");
  }
}
