// Generated by Dagger (https://dagger.dev).
package com.ivan.todoengine.networking;

import com.ivan.todoengine.data.store.SimpleKeyValueStore;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BasicTokenStorage_Factory implements Factory<BasicTokenStorage> {
  private final Provider<SimpleKeyValueStore> simpleKeyValueStoreProvider;

  public BasicTokenStorage_Factory(Provider<SimpleKeyValueStore> simpleKeyValueStoreProvider) {
    this.simpleKeyValueStoreProvider = simpleKeyValueStoreProvider;
  }

  @Override
  public BasicTokenStorage get() {
    return newInstance(simpleKeyValueStoreProvider.get());
  }

  public static BasicTokenStorage_Factory create(
      Provider<SimpleKeyValueStore> simpleKeyValueStoreProvider) {
    return new BasicTokenStorage_Factory(simpleKeyValueStoreProvider);
  }

  public static BasicTokenStorage newInstance(SimpleKeyValueStore simpleKeyValueStore) {
    return new BasicTokenStorage(simpleKeyValueStore);
  }
}
