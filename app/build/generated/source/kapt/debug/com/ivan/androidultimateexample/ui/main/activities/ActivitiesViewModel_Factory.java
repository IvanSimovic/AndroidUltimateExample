// Generated by Dagger (https://dagger.dev).
package com.ivan.androidultimateexample.ui.main.activities;

import com.ivan.todoengine.logic.activity.ActivityLogic;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActivitiesViewModel_Factory implements Factory<ActivitiesViewModel> {
  private final Provider<ActivityLogic> activityLogicProvider;

  private final Provider<CoroutineScope> appScopeProvider;

  public ActivitiesViewModel_Factory(Provider<ActivityLogic> activityLogicProvider,
      Provider<CoroutineScope> appScopeProvider) {
    this.activityLogicProvider = activityLogicProvider;
    this.appScopeProvider = appScopeProvider;
  }

  @Override
  public ActivitiesViewModel get() {
    return newInstance(activityLogicProvider.get(), appScopeProvider.get());
  }

  public static ActivitiesViewModel_Factory create(Provider<ActivityLogic> activityLogicProvider,
      Provider<CoroutineScope> appScopeProvider) {
    return new ActivitiesViewModel_Factory(activityLogicProvider, appScopeProvider);
  }

  public static ActivitiesViewModel newInstance(ActivityLogic activityLogic,
      CoroutineScope appScope) {
    return new ActivitiesViewModel(activityLogic, appScope);
  }
}
