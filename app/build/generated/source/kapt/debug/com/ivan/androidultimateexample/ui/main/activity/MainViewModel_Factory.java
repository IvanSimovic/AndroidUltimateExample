// Generated by Dagger (https://dagger.dev).
package com.ivan.androidultimateexample.ui.main.activity;

import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<CoroutineScope> appScopeProvider;

  public MainViewModel_Factory(Provider<CoroutineScope> appScopeProvider) {
    this.appScopeProvider = appScopeProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(appScopeProvider.get());
  }

  public static MainViewModel_Factory create(Provider<CoroutineScope> appScopeProvider) {
    return new MainViewModel_Factory(appScopeProvider);
  }

  public static MainViewModel newInstance(CoroutineScope appScope) {
    return new MainViewModel(appScope);
  }
}
